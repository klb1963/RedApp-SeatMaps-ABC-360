// —Ñ–∞–π–ª: code/components/loadSeatMapFromSabre.ts

/**
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç SeatMap –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞ —Ä–µ–π—Å–∞ –∏ —Å–ø–∏—Å–∫–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤.
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç Sabre EnhancedSeatMapRQ —á–µ—Ä–µ–∑ SOAP API.
 * –§–æ—Ä–º–∏—Ä—É–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ä–µ–π—Å–µ, –ø–∞—Å—Å–∞–∂–∏—Ä–∞—Ö –∏ –∫–ª–∞—Å—Å–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.
 * 
 * @param flightSegment –î–∞–Ω–Ω—ã–µ —Å–µ–≥–º–µ–Ω—Ç–∞ —Ä–µ–π—Å–∞ (–≥–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –ø—Ä–∏–±—ã—Ç–∏—è, –¥–∞—Ç–∞, –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫ –∏ —Ç.–¥.).
 * @param passengers –°–ø–∏—Å–æ–∫ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞.
 * @param onSuccess –ö–æ–ª–±—ç–∫, –≤—ã–∑—ã–≤–∞–µ–º—ã–π –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã –º–µ—Å—Ç.
 * @param onError (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) –ö–æ–ª–±—ç–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ API.
 */

import { getService } from '../Context';
import { ISoapApiService } from 'sabre-ngv-communication/interfaces/ISoapApiService';

interface Passenger {
    travellerId: number;
    givenName: string;
    surname: string;
}

interface FlightSegment {
    origin: string;
    destination: string;
    departureDate: string;
    marketingCarrier: string;
    marketingFlightNumber: string;
    flightNumber: string;
    bookingClass: string;
    cabin?: 'Economy' | 'PremiumEconomy' | 'Business' | 'First'; // üÜï –¥–æ–±–∞–≤–∏–ª–∏
}

export const loadSeatMapFromSabre = async (
    flightSegment: FlightSegment,
    passengers: Passenger[],
    onSuccess: (response: any) => void,
    onError?: (error: any) => void
): Promise<void> => {
    try {
        const soapApiService = getService(ISoapApiService);

        const passengerBlocks = passengers.map(passenger => `
            <ns4:FareAvailQualifiers passengerType="ADT">
                <ns4:TravellerID>${passenger.travellerId}</ns4:TravellerID>
                <ns4:GivenName>${passenger.givenName}</ns4:GivenName>
                <ns4:Surname>${passenger.surname}</ns4:Surname>
                <ns4:SSR>TKNE</ns4:SSR>
            </ns4:FareAvailQualifiers>
        `).join('');

        const cabinDefinitionBlock = flightSegment.bookingClass ? `
        <ns4:CabinDefinition>
            <ns4:RBD>${flightSegment.bookingClass}</ns4:RBD>
        </ns4:CabinDefinition>
        ` : `
            <ns4:CabinDefinition>
                <ns4:Cabin>${flightSegment.cabin}</ns4:Cabin>
            </ns4:CabinDefinition>
        `;

        const soapPayload = `
            <ns4:EnhancedSeatMapRQ xmlns:ns4="http://stl.sabre.com/Merchandising/v8">
                <ns4:SeatMapQueryEnhanced>
                    <ns4:RequestType>Payload</ns4:RequestType>

                    <ns4:POS company="DI9L" multiHost="DI9L">
                        <ns4:Actual city="MUC"/>
                        <ns4:PCC>DI9L</ns4:PCC>
                    </ns4:POS>

                    <ns4:Flight id="f1" destination="${flightSegment.destination}" origin="${flightSegment.origin}">
                        <ns4:DepartureDate>${flightSegment.departureDate}</ns4:DepartureDate>
                        <ns4:Marketing carrier="${flightSegment.marketingCarrier}">${flightSegment.marketingFlightNumber}</ns4:Marketing>
                    </ns4:Flight>

                    ${cabinDefinitionBlock}

                    <ns4:Currency>USD</ns4:Currency>

                    ${passengerBlocks}
                </ns4:SeatMapQueryEnhanced>
                <ns4:CalculateDiscount>true</ns4:CalculateDiscount>
                <ns4:ShowOffers>true</ns4:ShowOffers> 
            </ns4:EnhancedSeatMapRQ>
        `;

        console.log('üì§ Sending EnhancedSeatMapRQ payload:', soapPayload);

        const response = await soapApiService.callSws({
            action: 'EnhancedSeatMapRQ',
            payload: soapPayload,
            authTokenType: 'SESSION'
        });

        console.log('‚úÖ EnhancedSeatMapRQ Response:', response);

        onSuccess(response.getParsedValue());

    } catch (error) {
        console.error('‚ùå Error calling EnhancedSeatMapRQ:', error);
        if (onError) {
            onError(error);
        }
    }
};